<?xml version="1.0" encoding="utf-8"?>
<project name="Backpack" basedir="."
         default="build.all"
>
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
    <dirname property="backpack.basedir" file="${ant.file.Backpack}" />
<!--
    property definitions
-->
    <property name="backpack.src.dir" value="${backpack.basedir}/../src" />
    <property name="backpack.output.dir" value="${backpack.basedir}/.." />

    <condition 
        property="project.src.dir"
        value="${project.dir}"
        else="${backpack.basedir}/../project/"
    >
        <isset property="project.dir" />
    </condition>

    <condition
        property="project.name"
        value="${property.name}"
        else="project"
    >
        <isset property="project.name" />
    </condition>

    <condition
        property="project.namespace"
        value="${property.namespace}"
        else="Backpack"
    >
        <isset property="project.namespace" />
    </condition>

    <property name="project.build.filelist" value="${project.src.dir}/build.filelist" />
    <property name="project.image.dest" value="${project.src.dir}/${project.name}.images.js" />

    <target name="json-concat">
        <propertyregex input="${path}"
            override="yes"
            property="file"
            regexp=".*/([\w-_.]+).png.base64"
            replace="\1" />
        <concat destfile="${project.image.dest}" append="yes">
            <string>'${file}': 'data:image/png;base64,</string>
            <file file="${path}" />
            <string>',</string>
        </concat>
    </target>

    <target name="backpack.core.build"
            description="Builds Backpack"
    >
            <echo message="Encoding images" />
            <exec executable="${backpack.basedir}/../bin/image2base64.sh">
                <arg value="${project.src.dir}/images/*png" />
            </exec>
            <delete file="${project.image.dest}" />

            <concat destfile="${project.image.dest}">
                <string>${project.namespace}.${project.name}.images = &#123;</string>
            </concat>
            <foreach param="path" target="json-concat">
                <path>
                    <fileset dir="${project.src.dir}/images" includes="*base64" />
                </path>
            </foreach>
            <concat destfile="${project.image.dest}" append="yes">&#125;;</concat>

            <replaceregexp match="\,\}\;" replace="};" file="${project.image.dest}" />
            <echo message="Building Backpack" />
<!--             <concat destfile="${backpack.output.dir}/backpack.js"> -->
                <concat destfile="/home/morgan/priv/devel/jetpack/hacking/testpack.js">
                <filelist dir="${backpack.src.dir}">
                    <file name="backpack.core.js" />
                    <file name="backpack.util.js" />
                    <file name="backpack.event.js" />
                    <file name="backpack.mixins.js" />

                    <file name="backpack.selection.js" />
                    <file name="backpack.slideBar.js" />
                    <file name="backpack.statusBar.js" />
                    
                    <file name="backpack.init.js" />
<!--                     <file name="backpack.run.js" /> -->
                </filelist>

                <fileset dir="${project.src.dir}" includesfile="${project.build.filelist}" />
            </concat>
            <delete>
                <fileset dir="${project.src.dir}/images/" includes="*.base64" />
            </delete>
    </target>

    <target name="build.all"
            description="Builds Backpack."
            depends="backpack.core.build"
    />

    <target name="test"
            description="Test build"
    >
        <echo message="Running tests" />
        <java jar="${backpack.test.rhino}"
            fork="true"
        >
            <arg value="${backpack.test.runner}" />
        </java>
        <echo message="Testing complete" />
    </target>
</project>
